[build-system]
requires = ["setuptools>=61.0", "wheel", "cython>=3.0.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "moo-counter"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "playwright>=1.55.0",
    "cython>=3.0.0",
    "greenlet>=3.2.4",
    "httpx>=0.28.1",
]


[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "cython>=3.1.4",
    "isort>=5.13.2",
    "maturin>=1.9.4",
    "md-toc>=9.0.0",
    "mypy>=1.14.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.9.2",
    "setuptools>=80.9.0",
    "wheel>=0.45.1",
]


[tool.sqlfmt]
line_length = 120
exclude=["target/**/*", "dbt_packages/**/*", ".venv/**/*", "pytests/**/*"]


[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",# pycodestyle
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    # "I", # isort
    "PTH", # falek8-use-pathlib 
    "TCH", # flake8-type-checking
    # "S", # flake8-bandit
    "C90", #mccabe
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"src/moo_counter/strategies/mcts.py" = ["C901"] 

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 10

[tool.isort]
profile = "black"
multi_line_output = 3
import_heading_stdlib = "Standard Library"
import_heading_firstparty = "Our Libraries"
import_heading_thirdparty = "Third Party"

skip = ["src/moo_counter/engines/cython_engine.pyx"]

[tool.coverage.run]
omit = [
    "**/__main__.py"
]

[tool.pytest.ini_options]
minversion = "6.0"
# basic flags
# addopts = "-s -vvv --color=yes -n auto" 

# Full test configuration with coverage (use with --cov flag)
addopts = "-s -vvv --color=yes -n auto --cov-report=html --cov-report=term --cov-report=json --cov=src --cov-branch"
# addopts = "-s -vvv --color=yes -n auto --cov-report=html --cov-report=term --cov-report=json --cov=src --cov-branch --cov-fail-under=90"

[tool.mypy]
pretty = true
exclude = [
  'tests/',
  '.venv/',
  'docs/'
]
follow_imports = 'silent'
ignore_missing_imports = true

# Work your way up to these:
strict = true

